import currency.stencil

diagram(data) {

	rule draw for elem:Group			//pages(0) {
											for elem : elem.elems
	          									call draw for elem

	rule draw for elem:Question			horizontal {
			      							text elem.qn
	      									call draw(elem.value.val) for elem.ans
	    								}

	rule draw(value) for elem:TextBox	text? value elem.type

	rule draw(value) for elem:CheckBox	multi value
											elem.choices.map(){|c|return c.string}

	rule draw(value) for elem:MultiChoice	single value 
											elem.choices.map(){|c|return c.string}

//	rule draw(value) for elem:Computed	box { text [[elem.expr|data.all_elems]] }
	rule draw(value) for elem:Computed	box { text [[elem.expr|get_elems(data)]] }

	def get_elems ( x ) { return (call gelems for x) }
	rule gelems for o:Questionaire		o.elems.flat_map() {|e| return (call gelems for e)}
	rule gelems for o:Group				o.elems.flat_map() {|e| return (call gelems for e)}
	rule gelems for o:Question			return [o]

	///////////////////////////////////////////////////////////////

	//create the nodes (one for each class)
	style [background="#feb97d", height="100%", width="100%"] {
	vertical [background="#feb97d", padding="0px", 
			height="100%", width="760px", margin="0 auto"] {
		style [background="#943400", color="#fff", padding="18px 10px 20px", margin="0px",
				"font-family"="Helvetica", "font-size"="160%", "font-weight"="bold"] {
			text data.title
		}
		style [background="#fff", height="100%", padding="20px 20px 0px", margin="0px auto auto"] {
		grid [height="400px", width="100%",   
				"font-family"="Helvetica", "font-size"="100%", color="#591F00"] {
    		for elem : data.elems {
				call draw for elem
			}
		}
		}
	} }
}
