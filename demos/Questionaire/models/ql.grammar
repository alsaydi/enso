import expr.grammar

start Questionaire

Questionaire ::= [Questionaire] elems:Elem*@/ "answers" / answers:Answer*@/

Elem ::= Group | Question

Group ::= [Group] ("if" guard:Expr)? "{" elems:Elem*@/ "}"

Question ::= [Question] name:sym ":" qn:str ans:<root.answers[it]>

Answer ::= CheckBox
         | MultiChoice
         | TextBox
         | Computed

CheckBox ::= [CheckBox] name:sym ":" type:Type "[" choices:Label+ "]"
MultiChoice ::= [MultiChoice] name:sym ":" type:Type "(" choices:Label+ ")"
TextBox ::= [TextBox] name:sym ":" type:Type
Computed ::= [Computed] name:sym ":" type:Type "=" expr:Expr

Type ::= "int" | "bool" | "str" | "real"

Label ::= [Label] to_str:str
