import expr.schema

class Stencil
  title: str?
  root: str
  body! Part

class Part

class Prop
  var! Expr
  val! Expr

// DIAGRAMS

class Container < Part
  label: str?
  props! Prop*
  direction: int // 1=vert, 2=hoiz, 3=graph
  items! Part*

class Pages < Part
  label: str?
  props! Prop*
  items! Part*
  current! Expr?

class Space < Part
  label: str?
  props! Prop*

class Shape < Part
  label: str?
  props! Prop*
  kind: str
  content! Part?

class Text < Part
  label: str?
  props! Prop*
  string! Expr
  editable: bool

class Widget < Part
  label: str?
  props! Prop*

class CheckBox < Widget
  value! Expr?
  string! Expr

class RadioList < Widget
  value! Expr?
  choices! Expr

class TextBox < Widget
  value! Expr?

class Connector < Part
  label! Expr?
  ends! ConnectorEnd*

class ConnectorEnd
  arrow: str?
  label! Expr?
  other_label! Expr?
  part! Expr


// Additional expr 

class InstanceOf < Expr
  base! Expr
  class_name: str

class Color < Expr
  r! Expr
  g! Expr
  b! Expr

class Eval < Expr
  expr! Expr

class Rule < Expr	//a rule is essentially a sugar-ed up function

primitive int
primitive str
primitive bool
primitive atom
