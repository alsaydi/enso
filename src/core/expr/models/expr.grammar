start Expr

Expr ::= EOr
EOr ::= [EBinOp] e1:EAnd "or" e2:EOr @"@op = 'or'"
       | EAnd
EAnd ::= [EBinOp] e1:EBinOp "and" e2:EAnd @"@op = 'and'"
        | EBinOp
EBinOp ::= [EBinOp] e1:EUnOp (op:"=="|op:"!="|op:">"|op:"<"|op:">="|op:"<="|op:"+") e2:EBinOp
         | EUnOp
EUnOp ::= [EUnOp] op:"not" e:Expr
        | Primary
        | "(" Expr ")"
Primary ::= EConst
EConst ::= [EStrConst] val:str
         | [EIntConst] val:int
         | [EBoolConst] "true" @"@val=true" | [EBoolConst] "false" @"@val=false"
