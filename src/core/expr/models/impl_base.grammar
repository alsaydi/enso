start EBlock

Command ::= EWhile
          | EFor
          | EIf
          | ESwitch
          | EFunCall
          | EFunDef
          | EAssign
          | EImport
          | EBlock
          | EReturn

EWhile ::= [EWhile] "while" cond:Expr body:Command
EFor ::= [EFor] "for" var:sym ":" list:Expr body:Command
EIf ::= [EIf] "if" cond:Expr body:Command ("else" body2:Command)?
ESwitch ::= [ESwitch] "switch" e:Expr
EFunDef ::= [EFunDef] "def" name:sym "(" formals:{Formal ","}* ")" body:Command
EAssign ::= [EAssign] var:Expr "=" val:Expr
EImport ::= [EImport] "require" path:str
EReturn ::= "return" Expr

Formal ::= [Formal] name:sym

EBlock ::= [EBlock] "{" body:Command* "}"

abstract EFunCall
abstract Expr