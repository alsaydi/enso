

class Grammar
  @schema: Schema = Schema { types: rules.types }
end

class Rule
  @type: Type = Class {name: name; subclasses: arg.types} 
  @types: Type* = type
  @fields: Field* = arg.fields
end

class Expression
end

class Alt
  @types: Type* = alts.type
  @fields: Field* = alts.fields
end

class Sequence
  @fields: Field* = elements.fields
  @type
end

class Field
  @fields: Field* = Field {name: name; type: arg.type; 
  	   	    	   optional: arg.optional;
 			   many: arg.many  }
end

class Create
  @fields: Field* = {} // stop here
  @type: Type = Class {name: name}
end

class Call
  @fields: Field* = rule.fields
  @type: Type = rule.type
end

class Regular
  @type: Type = arg.type
end

class Value < Expression 
  @type: Type = Primitive {name: kind}
end 

class Ref < Expression 
  @type: Type = Class {name: name}
end 

class Lit < Expression 
  @type: Type = Primitive {name: "str"}
end 

