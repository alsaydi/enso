
  start Grammar

  Grammar ::= [Grammar] "\documentclass{article}" /
                        "\begin{document}" /
                        "\begin{tabbing}" /
                        "\quad\=\quad\=\quad\=\quad\=\quad\=\quad\=\quad\=\quad\=\quad\= \\" /
                         "\verb~start~" \start:</rules[it]> "\\" / 
                         rules:Rule* @(/ "\\ \\") /
                         "\end{tabbing}" /
                         "\end{document}" 

  Italic ::= "\textit{" sym "}"
  Courier ::= "\texttt{" sym "}"
  
  Rule ::= [Rule] name:Italic "\verb~::=~" arg:Alt
         | [Rule] "\verb~abstract~" name:Italic

  Alt ::= [Alt] "\+" > alts:Create+@(/ "\\" "\verb~|~") "\-" <

  Create ::= [Create] arg:Sequence
    | Sequence

  Sequence ::= [Sequence] elements:Field*

  Field ::= [Field] arg:Pattern
    | Pattern
  
  Pattern ::= 
      [Value] kind:"\verb~int~"
    | [Value] kind:"\verb~str~"
    | [Value] kind:"\verb~real~"
    | [Value] kind:"\verb~sym~"
    | [Value] kind:"\verb~atom~"
    | [Code] "\verb~\{~" expr:Expr "\verb~\}~"
    | [Ref] "\verb~<~" path:Path "\verb~>~"
    | [Lit] value:Courier
    | [Call] rule:</rules[it]>
    | [Regular] arg:Pattern "\verb~*~" Sep? { (optional == true) and (many == true) }
    | [Regular] arg:Pattern "\verb~?~" { optional == true }
    | [Regular] arg:Pattern "\verb~+~" Sep? { many == true }
    | [NoSpace] 
    | [Break] 
    | [Indent] 
    | "\verb~(~" Alt "\verb~)~"
    
  Sep ::= "\verb~@~" sep:Pattern

// extension of path grammar

Expr ::= 

Path ::= [Anchor] type:"\verb~.~"
      |  [Anchor] type:"\verb~..~"
      |  [Sub] parent:Path? "\verb~/~" name:sym Subscript?

Subscript ::= "\verb~[~" key:Key "\verb~]~"

Key ::= [Const] value:atom
      | Path
      | [It] "\verb~it~"
      