start Schema

Schema ::= [Schema] types:TypeDef* 

TypeDef ::= Primitive | Klass

Primitive ::= [Primitive] "primitive" name:sym

Klass ::= [Klass] "class" name:sym Details defined_fields:Field* "end"
Details ::= Parent?
Parent ::= "<" supers:{Super ","}+
Super ::= Klass^

Field ::= [Field] Key? Traversal? name:sym ":" type:Type^ Multiplicity Annot?
Key ::= "#" @"@key = true"
Traversal ::= "!" @"@traversal = true"

Multiplicity ::= "*" @"@many = true; @optional = true"
	       | "?" @"@optional = true" 
	       | "+" @"@many = true"
	       | @"true"

Annot ::= "/" inverse:Field^
        | "=" computed:str
