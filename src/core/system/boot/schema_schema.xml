<Schema>
  <types>
    <Primitive name='str'/>
    <Primitive name='int'/>
    <Primitive name='bool'/>
    <Primitive name='real'/>
    <Class name='Schema'>
      <defined_fields>
        <Field name='types' optional='true' many='true' traversal='true'>
          <type>
            /types[Type]
          </type>
          <inverse>
            /types[Type]/defined_fields[schema]
          </inverse>
        </Field>
        <Field name='classes' optional='true' many='true' computed='@types.select(&amp;:Class?)'>
          <type>
            /types[Class]
          </type>
        </Field>
        <Field name='primitives' optional='true' many='true' computed='@types.select(&amp;:Primitive?)'>
          <type>
            /types[Primitive]
          </type>
        </Field>
      </defined_fields>
    </Class>
    <Class name='Type'>
      <subclasses>
        /types[Class] /types[Primitive]
      </subclasses>
      <defined_fields>
        <Field name='name' key='true'>
          <type>
            /types[str]
          </type>
        </Field>
        <Field name='schema'>
          <type>
            /types[Schema]
          </type>
          <inverse>
            /types[Schema]/defined_fields[types]
          </inverse>
        </Field>
      </defined_fields>
    </Class>
    <Class name='Primitive'>
      <supers>
        /types[Type]
      </supers>
    </Class>
    <Class name='Class'>
      <supers>
        /types[Type]
      </supers>
      <defined_fields>
        <Field name='supers' optional='true' many='true'>
          <type>
            /types[Class]
          </type>
          <inverse>
            /types[Class]/defined_fields[subclasses]
          </inverse>
        </Field>
        <Field name='subclasses' optional='true' many='true'>
          <type>
            /types[Class]
          </type>
          <inverse>
            /types[Class]/defined_fields[supers]
          </inverse>
        </Field>
        <Field name='defined_fields' optional='true' many='true' traversal='true'>
          <type>
            /types[Field]
          </type>
          <inverse>
            /types[Field]/defined_fields[owner]
          </inverse>
        </Field>
        <Field name='fields' optional='true' many='true' computed='@all_fields.select {|f| !f.computed}'>
          <type>
            /types[Field]
          </type>
        </Field>
        <Field name='all_fields' optional='true' many='true' computed='@supers.flat_map(&amp;:all_fields) + @defined_fields'>
          <type>
            /types[Field]
          </type>
        </Field>
      </defined_fields>
    </Class>
    <Class name='Field'>
      <defined_fields>
        <Field name='name' key='true'>
          <type>
            /types[str]
          </type>
        </Field>
        <Field name='owner'>
          <type>
            /types[Class]
          </type>
          <inverse>
            /types[Class]/defined_fields[defined_fields]
          </inverse>
        </Field>
        <Field name='type'>
          <type>
            /types[Type]
          </type>
        </Field>
        <Field name='optional'>
          <type>
            /types[bool]
          </type>
        </Field>
        <Field name='many'>
          <type>
            /types[bool]
          </type>
        </Field>
        <Field name='key'>
          <type>
            /types[bool]
          </type>
        </Field>
        <Field name='auto'>
          <type>
            /types[bool]
          </type>
        </Field>
        <Field name='inverse' optional='true'>
          <type>
            /types[Field]
          </type>
          <inverse>
            /types[Field]/defined_fields[inverse]
          </inverse>
        </Field>
        <Field name='computed' optional='true'>
          <type>
            /types[str]
          </type>
        </Field>
        <Field name='traversal'>
          <type>
            /types[bool]
          </type>
        </Field>
      </defined_fields>
    </Class>
  </types>
</Schema>
