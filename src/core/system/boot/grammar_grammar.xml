<Grammar>
  <start many='false' keyed='true'>
    /rules[Grammar]
  </start>
  <rules many='true' keyed='true'>
    <Rule name='Subscript'>
      <grammar many='false' keyed='false'>
        /
      </grammar>
      <arg many='false' keyed='false'>
        <Alt>
          <alts many='true' keyed='false'>
            <Sequence>
              <elements many='true' keyed='false'>
                <Lit value='['/>
                <Field name='key'>
                  <arg many='false' keyed='false'>
                    <Call>
                      <rule many='false' keyed='true'>
                        /rules[Key]
                      </rule>
                    </Call>
                  </arg>
                </Field>
                <Lit value=']'/>
              </elements>
            </Sequence>
          </alts>
        </Alt>
      </arg>
    </Rule>
    <Rule name='ETernOp'>
      <grammar many='false' keyed='false'>
        /
      </grammar>
      <arg many='false' keyed='false'>
        <Alt>
          <alts many='true' keyed='false'>
            <Create name='ETernOp'>
              <arg many='false' keyed='false'>
                <Sequence>
                  <elements many='true' keyed='false'>
                    <Field name='e1'>
                      <arg many='false' keyed='false'>
                        <Call>
                          <rule many='false' keyed='true'>
                            /rules[ETernOp]
                          </rule>
                        </Call>
                      </arg>
                    </Field>
                    <Field name='op1'>
                      <arg many='false' keyed='false'>
                        <Lit value='?'/>
                      </arg>
                    </Field>
                    <Field name='e2'>
                      <arg many='false' keyed='false'>
                        <Call>
                          <rule many='false' keyed='true'>
                            /rules[EOr]
                          </rule>
                        </Call>
                      </arg>
                    </Field>
                    <Field name='op2'>
                      <arg many='false' keyed='false'>
                        <Lit value=':'/>
                      </arg>
                    </Field>
                    <Field name='e3'>
                      <arg many='false' keyed='false'>
                        <Call>
                          <rule many='false' keyed='true'>
                            /rules[EOr]
                          </rule>
                        </Call>
                      </arg>
                    </Field>
                  </elements>
                </Sequence>
              </arg>
            </Create>
            <Sequence>
              <elements many='true' keyed='false'>
                <Call>
                  <rule many='false' keyed='true'>
                    /rules[EOr]
                  </rule>
                </Call>
              </elements>
            </Sequence>
          </alts>
        </Alt>
      </arg>
    </Rule>
    <Rule name='EOr'>
      <grammar many='false' keyed='false'>
        /
      </grammar>
      <arg many='false' keyed='false'>
        <Alt>
          <alts many='true' keyed='false'>
            <Create name='EBinOp'>
              <arg many='false' keyed='false'>
                <Sequence>
                  <elements many='true' keyed='false'>
                    <Field name='e1'>
                      <arg many='false' keyed='false'>
                        <Call>
                          <rule many='false' keyed='true'>
                            /rules[EOr]
                          </rule>
                        </Call>
                      </arg>
                    </Field>
                    <Lit value='or'/>
                    <Field name='e2'>
                      <arg many='false' keyed='false'>
                        <Call>
                          <rule many='false' keyed='true'>
                            /rules[EAnd]
                          </rule>
                        </Call>
                      </arg>
                    </Field>
                    <Code>
                      <expr many='false' keyed='false'>
                        <EBinOp op='eql?'>
                          <e1 many='false' keyed='false'>
                            <EVar name='op'/>
                          </e1>
                          <e2 many='false' keyed='false'>
                            <EStrConst val='|'/>
                          </e2>
                        </EBinOp>
                      </expr>
                    </Code>
                  </elements>
                </Sequence>
              </arg>
            </Create>
            <Sequence>
              <elements many='true' keyed='false'>
                <Call>
                  <rule many='false' keyed='true'>
                    /rules[EAnd]
                  </rule>
                </Call>
              </elements>
            </Sequence>
          </alts>
        </Alt>
      </arg>
    </Rule>
    <Rule name='EAnd'>
      <grammar many='false' keyed='false'>
        /
      </grammar>
      <arg many='false' keyed='false'>
        <Alt>
          <alts many='true' keyed='false'>
            <Create name='EBinOp'>
              <arg many='false' keyed='false'>
                <Sequence>
                  <elements many='true' keyed='false'>
                    <Field name='e1'>
                      <arg many='false' keyed='false'>
                        <Call>
                          <rule many='false' keyed='true'>
                            /rules[EAnd]
                          </rule>
                        </Call>
                      </arg>
                    </Field>
                    <Lit value='and'/>
                    <Field name='e2'>
                      <arg many='false' keyed='false'>
                        <Call>
                          <rule many='false' keyed='true'>
                            /rules[EBinOp1]
                          </rule>
                        </Call>
                      </arg>
                    </Field>
                    <Code>
                      <expr many='false' keyed='false'>
                        <EBinOp op='eql?'>
                          <e1 many='false' keyed='false'>
                            <EVar name='op'/>
                          </e1>
                          <e2 many='false' keyed='false'>
                            <EStrConst val='&amp;'/>
                          </e2>
                        </EBinOp>
                      </expr>
                    </Code>
                  </elements>
                </Sequence>
              </arg>
            </Create>
            <Sequence>
              <elements many='true' keyed='false'>
                <Call>
                  <rule many='false' keyed='true'>
                    /rules[EBinOp1]
                  </rule>
                </Call>
              </elements>
            </Sequence>
          </alts>
        </Alt>
      </arg>
    </Rule>
    <Rule name='EBinOp1'>
      <grammar many='false' keyed='false'>
        /
      </grammar>
      <arg many='false' keyed='false'>
        <Alt>
          <alts many='true' keyed='false'>
            <Create name='EBinOp'>
              <arg many='false' keyed='false'>
                <Sequence>
                  <elements many='true' keyed='false'>
                    <Field name='e1'>
                      <arg many='false' keyed='false'>
                        <Call>
                          <rule many='false' keyed='true'>
                            /rules[EBinOp1]
                          </rule>
                        </Call>
                      </arg>
                    </Field>
                    <Alt>
                      <alts many='true' keyed='false'>
                        <Sequence>
                          <elements many='true' keyed='false'>
                            <Lit value='=='/>
                            <Code>
                              <expr many='false' keyed='false'>
                                <EBinOp op='eql?'>
                                  <e1 many='false' keyed='false'>
                                    <EVar name='op'/>
                                  </e1>
                                  <e2 many='false' keyed='false'>
                                    <EStrConst val='eql?'/>
                                  </e2>
                                </EBinOp>
                              </expr>
                            </Code>
                          </elements>
                        </Sequence>
                        <Sequence>
                          <elements many='true' keyed='false'>
                            <Field name='op'>
                              <arg many='false' keyed='false'>
                                <Lit value='!='/>
                              </arg>
                            </Field>
                          </elements>
                        </Sequence>
                        <Sequence>
                          <elements many='true' keyed='false'>
                            <Field name='op'>
                              <arg many='false' keyed='false'>
                                <Lit value='&gt;'/>
                              </arg>
                            </Field>
                          </elements>
                        </Sequence>
                        <Sequence>
                          <elements many='true' keyed='false'>
                            <Field name='op'>
                              <arg many='false' keyed='false'>
                                <Lit value='&lt;'/>
                              </arg>
                            </Field>
                          </elements>
                        </Sequence>
                        <Sequence>
                          <elements many='true' keyed='false'>
                            <Field name='op'>
                              <arg many='false' keyed='false'>
                                <Lit value='&gt;='/>
                              </arg>
                            </Field>
                          </elements>
                        </Sequence>
                        <Sequence>
                          <elements many='true' keyed='false'>
                            <Field name='op'>
                              <arg many='false' keyed='false'>
                                <Lit value='&lt;='/>
                              </arg>
                            </Field>
                          </elements>
                        </Sequence>
                      </alts>
                    </Alt>
                    <Field name='e2'>
                      <arg many='false' keyed='false'>
                        <Call>
                          <rule many='false' keyed='true'>
                            /rules[EBinOp2]
                          </rule>
                        </Call>
                      </arg>
                    </Field>
                  </elements>
                </Sequence>
              </arg>
            </Create>
            <Sequence>
              <elements many='true' keyed='false'>
                <Call>
                  <rule many='false' keyed='true'>
                    /rules[EBinOp2]
                  </rule>
                </Call>
              </elements>
            </Sequence>
          </alts>
        </Alt>
      </arg>
    </Rule>
    <Rule name='EBinOp2'>
      <grammar many='false' keyed='false'>
        /
      </grammar>
      <arg many='false' keyed='false'>
        <Alt>
          <alts many='true' keyed='false'>
            <Create name='EBinOp'>
              <arg many='false' keyed='false'>
                <Sequence>
                  <elements many='true' keyed='false'>
                    <Field name='e1'>
                      <arg many='false' keyed='false'>
                        <Call>
                          <rule many='false' keyed='true'>
                            /rules[EBinOp2]
                          </rule>
                        </Call>
                      </arg>
                    </Field>
                    <Alt>
                      <alts many='true' keyed='false'>
                        <Sequence>
                          <elements many='true' keyed='false'>
                            <Field name='op'>
                              <arg many='false' keyed='false'>
                                <Lit value='+'/>
                              </arg>
                            </Field>
                          </elements>
                        </Sequence>
                        <Sequence>
                          <elements many='true' keyed='false'>
                            <Field name='op'>
                              <arg many='false' keyed='false'>
                                <Lit value='-'/>
                              </arg>
                            </Field>
                          </elements>
                        </Sequence>
                      </alts>
                    </Alt>
                    <Field name='e2'>
                      <arg many='false' keyed='false'>
                        <Call>
                          <rule many='false' keyed='true'>
                            /rules[EBinOp3]
                          </rule>
                        </Call>
                      </arg>
                    </Field>
                  </elements>
                </Sequence>
              </arg>
            </Create>
            <Sequence>
              <elements many='true' keyed='false'>
                <Call>
                  <rule many='false' keyed='true'>
                    /rules[EBinOp3]
                  </rule>
                </Call>
              </elements>
            </Sequence>
          </alts>
        </Alt>
      </arg>
    </Rule>
    <Rule name='EBinOp3'>
      <grammar many='false' keyed='false'>
        /
      </grammar>
      <arg many='false' keyed='false'>
        <Alt>
          <alts many='true' keyed='false'>
            <Create name='EBinOp'>
              <arg many='false' keyed='false'>
                <Sequence>
                  <elements many='true' keyed='false'>
                    <Field name='e1'>
                      <arg many='false' keyed='false'>
                        <Call>
                          <rule many='false' keyed='true'>
                            /rules[EBinOp3]
                          </rule>
                        </Call>
                      </arg>
                    </Field>
                    <Alt>
                      <alts many='true' keyed='false'>
                        <Sequence>
                          <elements many='true' keyed='false'>
                            <Field name='op'>
                              <arg many='false' keyed='false'>
                                <Lit value='*'/>
                              </arg>
                            </Field>
                          </elements>
                        </Sequence>
                        <Sequence>
                          <elements many='true' keyed='false'>
                            <Field name='op'>
                              <arg many='false' keyed='false'>
                                <Lit value='/'/>
                              </arg>
                            </Field>
                          </elements>
                        </Sequence>
                        <Sequence>
                          <elements many='true' keyed='false'>
                            <Field name='op'>
                              <arg many='false' keyed='false'>
                                <Lit value='%'/>
                              </arg>
                            </Field>
                          </elements>
                        </Sequence>
                      </alts>
                    </Alt>
                    <Field name='e2'>
                      <arg many='false' keyed='false'>
                        <Call>
                          <rule many='false' keyed='true'>
                            /rules[EUnOp]
                          </rule>
                        </Call>
                      </arg>
                    </Field>
                  </elements>
                </Sequence>
              </arg>
            </Create>
            <Sequence>
              <elements many='true' keyed='false'>
                <Call>
                  <rule many='false' keyed='true'>
                    /rules[EUnOp]
                  </rule>
                </Call>
              </elements>
            </Sequence>
          </alts>
        </Alt>
      </arg>
    </Rule>
    <Rule name='EUnOp'>
      <grammar many='false' keyed='false'>
        /
      </grammar>
      <arg many='false' keyed='false'>
        <Alt>
          <alts many='true' keyed='false'>
            <Create name='EUnOp'>
              <arg many='false' keyed='false'>
                <Sequence>
                  <elements many='true' keyed='false'>
                    <Lit value='not'/>
                    <Field name='e'>
                      <arg many='false' keyed='false'>
                        <Call>
                          <rule many='false' keyed='true'>
                            /rules[Expr]
                          </rule>
                        </Call>
                      </arg>
                    </Field>
                    <Code>
                      <expr many='false' keyed='false'>
                        <EBinOp op='eql?'>
                          <e1 many='false' keyed='false'>
                            <EVar name='op'/>
                          </e1>
                          <e2 many='false' keyed='false'>
                            <EStrConst val='!'/>
                          </e2>
                        </EBinOp>
                      </expr>
                    </Code>
                  </elements>
                </Sequence>
              </arg>
            </Create>
            <Sequence>
              <elements many='true' keyed='false'>
                <Call>
                  <rule many='false' keyed='true'>
                    /rules[EFunCall]
                  </rule>
                </Call>
              </elements>
            </Sequence>
            <Sequence>
              <elements many='true' keyed='false'>
                <Call>
                  <rule many='false' keyed='true'>
                    /rules[EListComp]
                  </rule>
                </Call>
              </elements>
            </Sequence>
            <Sequence>
              <elements many='true' keyed='false'>
                <Call>
                  <rule many='false' keyed='true'>
                    /rules[Primary]
                  </rule>
                </Call>
              </elements>
            </Sequence>
            <Sequence>
              <elements many='true' keyed='false'>
                <Lit value='('/>
                <Call>
                  <rule many='false' keyed='true'>
                    /rules[Expr]
                  </rule>
                </Call>
                <Lit value=')'/>
              </elements>
            </Sequence>
          </alts>
        </Alt>
      </arg>
    </Rule>
    <Rule name='EFunCall'>
      <grammar many='false' keyed='false'>
        /
      </grammar>
      <arg many='false' keyed='false'>
        <Alt>
          <alts many='true' keyed='false'>
            <Create name='EFunCall'>
              <arg many='false' keyed='false'>
                <Sequence>
                  <elements many='true' keyed='false'>
                    <Field name='fun'>
                      <arg many='false' keyed='false'>
                        <Call>
                          <rule many='false' keyed='true'>
                            /rules[EUnOp]
                          </rule>
                        </Call>
                      </arg>
                    </Field>
                    <Lit value='('/>
                    <Field name='params'>
                      <arg many='false' keyed='false'>
                        <Regular optional='true' many='true'>
                          <arg many='false' keyed='false'>
                            <Call>
                              <rule many='false' keyed='true'>
                                /rules[Expr]
                              </rule>
                            </Call>
                          </arg>
                          <sep many='false' keyed='false'>
                            <Lit value=','/>
                          </sep>
                        </Regular>
                      </arg>
                    </Field>
                    <Lit value=')'/>
                  </elements>
                </Sequence>
              </arg>
            </Create>
          </alts>
        </Alt>
      </arg>
    </Rule>
    <Rule name='Primary'>
      <grammar many='false' keyed='false'>
        /
      </grammar>
      <arg many='false' keyed='false'>
        <Alt>
          <alts many='true' keyed='false'>
            <Sequence>
              <elements many='true' keyed='false'>
                <Call>
                  <rule many='false' keyed='true'>
                    /rules[EConst]
                  </rule>
                </Call>
              </elements>
            </Sequence>
            <Create name='EField'>
              <arg many='false' keyed='false'>
                <Sequence>
                  <elements many='true' keyed='false'>
                    <Field name='e'>
                      <arg many='false' keyed='false'>
                        <Call>
                          <rule many='false' keyed='true'>
                            /rules[Primary]
                          </rule>
                        </Call>
                      </arg>
                    </Field>
                    <Lit value='.'/>
                    <Field name='fname'>
                      <arg many='false' keyed='false'>
                        <Value kind='sym'/>
                      </arg>
                    </Field>
                  </elements>
                </Sequence>
              </arg>
            </Create>
            <Create name='ESubscript'>
              <arg many='false' keyed='false'>
                <Sequence>
                  <elements many='true' keyed='false'>
                    <Field name='e'>
                      <arg many='false' keyed='false'>
                        <Call>
                          <rule many='false' keyed='true'>
                            /rules[Expr]
                          </rule>
                        </Call>
                      </arg>
                    </Field>
                    <Lit value='['/>
                    <Field name='sub'>
                      <arg many='false' keyed='false'>
                        <Call>
                          <rule many='false' keyed='true'>
                            /rules[Expr]
                          </rule>
                        </Call>
                      </arg>
                    </Field>
                    <Lit value=']'/>
                  </elements>
                </Sequence>
              </arg>
            </Create>
            <Create name='EVar'>
              <arg many='false' keyed='false'>
                <Sequence>
                  <elements many='true' keyed='false'>
                    <Field name='name'>
                      <arg many='false' keyed='false'>
                        <Value kind='sym'/>
                      </arg>
                    </Field>
                  </elements>
                </Sequence>
              </arg>
            </Create>
          </alts>
        </Alt>
      </arg>
    </Rule>
    <Rule name='EListComp'>
      <grammar many='false' keyed='false'>
        /
      </grammar>
      <arg many='false' keyed='false'>
        <Alt>
          <alts many='true' keyed='false'>
            <Create name='EListComp'>
              <arg many='false' keyed='false'>
                <Sequence>
                  <elements many='true' keyed='false'>
                    <Alt>
                      <alts many='true' keyed='false'>
                        <Sequence>
                          <elements many='true' keyed='false'>
                            <Field name='op'>
                              <arg many='false' keyed='false'>
                                <Lit value='all?'/>
                              </arg>
                            </Field>
                          </elements>
                        </Sequence>
                        <Sequence>
                          <elements many='true' keyed='false'>
                            <Field name='op'>
                              <arg many='false' keyed='false'>
                                <Lit value='any?'/>
                              </arg>
                            </Field>
                          </elements>
                        </Sequence>
                      </alts>
                    </Alt>
                    <Field name='var'>
                      <arg many='false' keyed='false'>
                        <Value kind='sym'/>
                      </arg>
                    </Field>
                    <Lit value='in'/>
                    <Field name='list'>
                      <arg many='false' keyed='false'>
                        <Call>
                          <rule many='false' keyed='true'>
                            /rules[Expr]
                          </rule>
                        </Call>
                      </arg>
                    </Field>
                    <Lit value=':'/>
                    <Field name='e'>
                      <arg many='false' keyed='false'>
                        <Call>
                          <rule many='false' keyed='true'>
                            /rules[Expr]
                          </rule>
                        </Call>
                      </arg>
                    </Field>
                  </elements>
                </Sequence>
              </arg>
            </Create>
          </alts>
        </Alt>
      </arg>
    </Rule>
    <Rule name='EConst'>
      <grammar many='false' keyed='false'>
        /
      </grammar>
      <arg many='false' keyed='false'>
        <Alt>
          <alts many='true' keyed='false'>
            <Create name='EStrConst'>
              <arg many='false' keyed='false'>
                <Sequence>
                  <elements many='true' keyed='false'>
                    <Field name='val'>
                      <arg many='false' keyed='false'>
                        <Value kind='str'/>
                      </arg>
                    </Field>
                  </elements>
                </Sequence>
              </arg>
            </Create>
            <Create name='EIntConst'>
              <arg many='false' keyed='false'>
                <Sequence>
                  <elements many='true' keyed='false'>
                    <Field name='val'>
                      <arg many='false' keyed='false'>
                        <Value kind='int'/>
                      </arg>
                    </Field>
                  </elements>
                </Sequence>
              </arg>
            </Create>
            <Create name='EBoolConst'>
              <arg many='false' keyed='false'>
                <Sequence>
                  <elements many='true' keyed='false'>
                    <Lit value='true'/>
                    <Code>
                      <expr many='false' keyed='false'>
                        <EBinOp op='eql?'>
                          <e1 many='false' keyed='false'>
                            <EVar name='val'/>
                          </e1>
                          <e2 many='false' keyed='false'>
                            <EBoolConst val='true'/>
                          </e2>
                        </EBinOp>
                      </expr>
                    </Code>
                  </elements>
                </Sequence>
              </arg>
            </Create>
            <Create name='EBoolConst'>
              <arg many='false' keyed='false'>
                <Sequence>
                  <elements many='true' keyed='false'>
                    <Lit value='false'/>
                    <Code>
                      <expr many='false' keyed='false'>
                        <EBinOp op='eql?'>
                          <e1 many='false' keyed='false'>
                            <EVar name='val'/>
                          </e1>
                          <e2 many='false' keyed='false'>
                            <EBoolConst/>
                          </e2>
                        </EBinOp>
                      </expr>
                    </Code>
                  </elements>
                </Sequence>
              </arg>
            </Create>
            <Create name='ERealConst'>
              <arg many='false' keyed='false'>
                <Sequence>
                  <elements many='true' keyed='false'>
                    <Field name='val'>
                      <arg many='false' keyed='false'>
                        <Value kind='real'/>
                      </arg>
                    </Field>
                  </elements>
                </Sequence>
              </arg>
            </Create>
            <Create name='ENil'>
              <arg many='false' keyed='false'>
                <Sequence>
                  <elements many='true' keyed='false'>
                    <Lit value='nil'/>
                  </elements>
                </Sequence>
              </arg>
            </Create>
          </alts>
        </Alt>
      </arg>
    </Rule>
    <Rule name='Grammar'>
      <grammar many='false' keyed='false'>
        /
      </grammar>
      <arg many='false' keyed='false'>
        <Alt>
          <alts many='true' keyed='false'>
            <Create name='Grammar'>
              <arg many='false' keyed='false'>
                <Sequence>
                  <elements many='true' keyed='false'>
                    <Lit value='start'/>
                    <Field name='start'>
                      <arg many='false' keyed='false'>
                        <Ref>
                          <path many='false' keyed='false'>
                            <Sub name='rules'>
                              <key many='false' keyed='false'>
                                <It/>
                              </key>
                            </Sub>
                          </path>
                        </Ref>
                      </arg>
                    </Field>
                    <Field name='rules'>
                      <arg many='false' keyed='false'>
                        <Regular optional='true' many='true'>
                          <arg many='false' keyed='false'>
                            <Call>
                              <rule many='false' keyed='true'>
                                /rules[Rule]
                              </rule>
                            </Call>
                          </arg>
                        </Regular>
                      </arg>
                    </Field>
                    <Break/>
                  </elements>
                </Sequence>
              </arg>
            </Create>
          </alts>
        </Alt>
      </arg>
    </Rule>
    <Rule name='Rule'>
      <grammar many='false' keyed='false'>
        /
      </grammar>
      <arg many='false' keyed='false'>
        <Alt>
          <alts many='true' keyed='false'>
            <Create name='Rule'>
              <arg many='false' keyed='false'>
                <Sequence>
                  <elements many='true' keyed='false'>
                    <Field name='name'>
                      <arg many='false' keyed='false'>
                        <Value kind='sym'/>
                      </arg>
                    </Field>
                    <Lit value='::='/>
                    <Field name='arg'>
                      <arg many='false' keyed='false'>
                        <Call>
                          <rule many='false' keyed='true'>
                            /rules[Alt]
                          </rule>
                        </Call>
                      </arg>
                    </Field>
                  </elements>
                </Sequence>
              </arg>
            </Create>
            <Create name='Rule'>
              <arg many='false' keyed='false'>
                <Sequence>
                  <elements many='true' keyed='false'>
                    <Lit value='abstract'/>
                    <Field name='name'>
                      <arg many='false' keyed='false'>
                        <Value kind='sym'/>
                      </arg>
                    </Field>
                  </elements>
                </Sequence>
              </arg>
            </Create>
          </alts>
        </Alt>
      </arg>
    </Rule>
    <Rule name='Alt'>
      <grammar many='false' keyed='false'>
        /
      </grammar>
      <arg many='false' keyed='false'>
        <Alt>
          <alts many='true' keyed='false'>
            <Create name='Alt'>
              <arg many='false' keyed='false'>
                <Sequence>
                  <elements many='true' keyed='false'>
                    <Field name='alts'>
                      <arg many='false' keyed='false'>
                        <Regular many='true'>
                          <arg many='false' keyed='false'>
                            <Call>
                              <rule many='false' keyed='true'>
                                /rules[Create]
                              </rule>
                            </Call>
                          </arg>
                          <sep many='false' keyed='false'>
                            <Alt>
                              <alts many='true' keyed='false'>
                                <Sequence>
                                  <elements many='true' keyed='false'>
                                    <Break/>
                                    <Lit value='|'/>
                                  </elements>
                                </Sequence>
                              </alts>
                            </Alt>
                          </sep>
                        </Regular>
                      </arg>
                    </Field>
                  </elements>
                </Sequence>
              </arg>
            </Create>
          </alts>
        </Alt>
      </arg>
    </Rule>
    <Rule name='Create'>
      <grammar many='false' keyed='false'>
        /
      </grammar>
      <arg many='false' keyed='false'>
        <Alt>
          <alts many='true' keyed='false'>
            <Create name='Create'>
              <arg many='false' keyed='false'>
                <Sequence>
                  <elements many='true' keyed='false'>
                    <Lit value='['/>
                    <NoSpace/>
                    <Field name='name'>
                      <arg many='false' keyed='false'>
                        <Value kind='sym'/>
                      </arg>
                    </Field>
                    <NoSpace/>
                    <Lit value=']'/>
                    <Field name='arg'>
                      <arg many='false' keyed='false'>
                        <Call>
                          <rule many='false' keyed='true'>
                            /rules[Sequence]
                          </rule>
                        </Call>
                      </arg>
                    </Field>
                  </elements>
                </Sequence>
              </arg>
            </Create>
            <Sequence>
              <elements many='true' keyed='false'>
                <Call>
                  <rule many='false' keyed='true'>
                    /rules[Sequence]
                  </rule>
                </Call>
              </elements>
            </Sequence>
          </alts>
        </Alt>
      </arg>
    </Rule>
    <Rule name='Sequence'>
      <grammar many='false' keyed='false'>
        /
      </grammar>
      <arg many='false' keyed='false'>
        <Alt>
          <alts many='true' keyed='false'>
            <Create name='Sequence'>
              <arg many='false' keyed='false'>
                <Sequence>
                  <elements many='true' keyed='false'>
                    <Field name='elements'>
                      <arg many='false' keyed='false'>
                        <Regular optional='true' many='true'>
                          <arg many='false' keyed='false'>
                            <Call>
                              <rule many='false' keyed='true'>
                                /rules[Field]
                              </rule>
                            </Call>
                          </arg>
                        </Regular>
                      </arg>
                    </Field>
                  </elements>
                </Sequence>
              </arg>
            </Create>
          </alts>
        </Alt>
      </arg>
    </Rule>
    <Rule name='Field'>
      <grammar many='false' keyed='false'>
        /
      </grammar>
      <arg many='false' keyed='false'>
        <Alt>
          <alts many='true' keyed='false'>
            <Create name='Field'>
              <arg many='false' keyed='false'>
                <Sequence>
                  <elements many='true' keyed='false'>
                    <Field name='name'>
                      <arg many='false' keyed='false'>
                        <Value kind='sym'/>
                      </arg>
                    </Field>
                    <NoSpace/>
                    <Lit value=':'/>
                    <NoSpace/>
                    <Field name='arg'>
                      <arg many='false' keyed='false'>
                        <Call>
                          <rule many='false' keyed='true'>
                            /rules[Pattern]
                          </rule>
                        </Call>
                      </arg>
                    </Field>
                  </elements>
                </Sequence>
              </arg>
            </Create>
            <Sequence>
              <elements many='true' keyed='false'>
                <Call>
                  <rule many='false' keyed='true'>
                    /rules[Pattern]
                  </rule>
                </Call>
              </elements>
            </Sequence>
          </alts>
        </Alt>
      </arg>
    </Rule>
    <Rule name='Pattern'>
      <grammar many='false' keyed='false'>
        /
      </grammar>
      <arg many='false' keyed='false'>
        <Alt>
          <alts many='true' keyed='false'>
            <Create name='Value'>
              <arg many='false' keyed='false'>
                <Sequence>
                  <elements many='true' keyed='false'>
                    <Field name='kind'>
                      <arg many='false' keyed='false'>
                        <Lit value='int'/>
                      </arg>
                    </Field>
                  </elements>
                </Sequence>
              </arg>
            </Create>
            <Create name='Value'>
              <arg many='false' keyed='false'>
                <Sequence>
                  <elements many='true' keyed='false'>
                    <Field name='kind'>
                      <arg many='false' keyed='false'>
                        <Lit value='str'/>
                      </arg>
                    </Field>
                  </elements>
                </Sequence>
              </arg>
            </Create>
            <Create name='Value'>
              <arg many='false' keyed='false'>
                <Sequence>
                  <elements many='true' keyed='false'>
                    <Field name='kind'>
                      <arg many='false' keyed='false'>
                        <Lit value='real'/>
                      </arg>
                    </Field>
                  </elements>
                </Sequence>
              </arg>
            </Create>
            <Create name='Value'>
              <arg many='false' keyed='false'>
                <Sequence>
                  <elements many='true' keyed='false'>
                    <Field name='kind'>
                      <arg many='false' keyed='false'>
                        <Lit value='sym'/>
                      </arg>
                    </Field>
                  </elements>
                </Sequence>
              </arg>
            </Create>
            <Create name='Value'>
              <arg many='false' keyed='false'>
                <Sequence>
                  <elements many='true' keyed='false'>
                    <Field name='kind'>
                      <arg many='false' keyed='false'>
                        <Lit value='atom'/>
                      </arg>
                    </Field>
                  </elements>
                </Sequence>
              </arg>
            </Create>
            <Create name='Code'>
              <arg many='false' keyed='false'>
                <Sequence>
                  <elements many='true' keyed='false'>
                    <Lit value='{'/>
                    <Field name='expr'>
                      <arg many='false' keyed='false'>
                        <Call>
                          <rule many='false' keyed='true'>
                            /rules[Expr]
                          </rule>
                        </Call>
                      </arg>
                    </Field>
                    <Lit value='}'/>
                  </elements>
                </Sequence>
              </arg>
            </Create>
            <Create name='Ref'>
              <arg many='false' keyed='false'>
                <Sequence>
                  <elements many='true' keyed='false'>
                    <Lit value='&lt;'/>
                    <NoSpace/>
                    <Field name='path'>
                      <arg many='false' keyed='false'>
                        <Call>
                          <rule many='false' keyed='true'>
                            /rules[Path]
                          </rule>
                        </Call>
                      </arg>
                    </Field>
                    <NoSpace/>
                    <Lit value='&gt;'/>
                  </elements>
                </Sequence>
              </arg>
            </Create>
            <Create name='Lit'>
              <arg many='false' keyed='false'>
                <Sequence>
                  <elements many='true' keyed='false'>
                    <Field name='value'>
                      <arg many='false' keyed='false'>
                        <Value kind='str'/>
                      </arg>
                    </Field>
                  </elements>
                </Sequence>
              </arg>
            </Create>
            <Create name='Call'>
              <arg many='false' keyed='false'>
                <Sequence>
                  <elements many='true' keyed='false'>
                    <Field name='rule'>
                      <arg many='false' keyed='false'>
                        <Ref>
                          <path many='false' keyed='false'>
                            <Sub name='rules'>
                              <key many='false' keyed='false'>
                                <It/>
                              </key>
                            </Sub>
                          </path>
                        </Ref>
                      </arg>
                    </Field>
                  </elements>
                </Sequence>
              </arg>
            </Create>
            <Create name='Regular'>
              <arg many='false' keyed='false'>
                <Sequence>
                  <elements many='true' keyed='false'>
                    <Field name='arg'>
                      <arg many='false' keyed='false'>
                        <Call>
                          <rule many='false' keyed='true'>
                            /rules[Pattern]
                          </rule>
                        </Call>
                      </arg>
                    </Field>
                    <NoSpace/>
                    <Lit value='?'/>
                    <Code>
                      <expr many='false' keyed='false'>
                        <EBinOp op='eql?'>
                          <e1 many='false' keyed='false'>
                            <EVar name='optional'/>
                          </e1>
                          <e2 many='false' keyed='false'>
                            <EBoolConst val='true'/>
                          </e2>
                        </EBinOp>
                      </expr>
                    </Code>
                  </elements>
                </Sequence>
              </arg>
            </Create>
            <Create name='Regular'>
              <arg many='false' keyed='false'>
                <Sequence>
                  <elements many='true' keyed='false'>
                    <Field name='arg'>
                      <arg many='false' keyed='false'>
                        <Call>
                          <rule many='false' keyed='true'>
                            /rules[Pattern]
                          </rule>
                        </Call>
                      </arg>
                    </Field>
                    <NoSpace/>
                    <Lit value='*'/>
                    <Regular optional='true'>
                      <arg many='false' keyed='false'>
                        <Call>
                          <rule many='false' keyed='true'>
                            /rules[Sep]
                          </rule>
                        </Call>
                      </arg>
                    </Regular>
                    <Code>
                      <expr many='false' keyed='false'>
                        <EBinOp op='&amp;'>
                          <e1 many='false' keyed='false'>
                            <EBinOp op='eql?'>
                              <e1 many='false' keyed='false'>
                                <EVar name='optional'/>
                              </e1>
                              <e2 many='false' keyed='false'>
                                <EBoolConst val='true'/>
                              </e2>
                            </EBinOp>
                          </e1>
                          <e2 many='false' keyed='false'>
                            <EBinOp op='eql?'>
                              <e1 many='false' keyed='false'>
                                <EVar name='many'/>
                              </e1>
                              <e2 many='false' keyed='false'>
                                <EBoolConst val='true'/>
                              </e2>
                            </EBinOp>
                          </e2>
                        </EBinOp>
                      </expr>
                    </Code>
                  </elements>
                </Sequence>
              </arg>
            </Create>
            <Create name='Regular'>
              <arg many='false' keyed='false'>
                <Sequence>
                  <elements many='true' keyed='false'>
                    <Field name='arg'>
                      <arg many='false' keyed='false'>
                        <Call>
                          <rule many='false' keyed='true'>
                            /rules[Pattern]
                          </rule>
                        </Call>
                      </arg>
                    </Field>
                    <NoSpace/>
                    <Lit value='+'/>
                    <Regular optional='true'>
                      <arg many='false' keyed='false'>
                        <Call>
                          <rule many='false' keyed='true'>
                            /rules[Sep]
                          </rule>
                        </Call>
                      </arg>
                    </Regular>
                    <Code>
                      <expr many='false' keyed='false'>
                        <EBinOp op='eql?'>
                          <e1 many='false' keyed='false'>
                            <EVar name='many'/>
                          </e1>
                          <e2 many='false' keyed='false'>
                            <EBoolConst val='true'/>
                          </e2>
                        </EBinOp>
                      </expr>
                    </Code>
                  </elements>
                </Sequence>
              </arg>
            </Create>
            <Create name='NoSpace'>
              <arg many='false' keyed='false'>
                <Sequence>
                  <elements many='true' keyed='false'>
                    <Lit value='.'/>
                  </elements>
                </Sequence>
              </arg>
            </Create>
            <Create name='Break'>
              <arg many='false' keyed='false'>
                <Sequence>
                  <elements many='true' keyed='false'>
                    <Lit value='/'/>
                  </elements>
                </Sequence>
              </arg>
            </Create>
            <Sequence>
              <elements many='true' keyed='false'>
                <Lit value='('/>
                <NoSpace/>
                <Call>
                  <rule many='false' keyed='true'>
                    /rules[Alt]
                  </rule>
                </Call>
                <NoSpace/>
                <Lit value=')'/>
              </elements>
            </Sequence>
          </alts>
        </Alt>
      </arg>
    </Rule>
    <Rule name='Sep'>
      <grammar many='false' keyed='false'>
        /
      </grammar>
      <arg many='false' keyed='false'>
        <Alt>
          <alts many='true' keyed='false'>
            <Sequence>
              <elements many='true' keyed='false'>
                <Lit value='@'/>
                <NoSpace/>
                <Field name='sep'>
                  <arg many='false' keyed='false'>
                    <Call>
                      <rule many='false' keyed='true'>
                        /rules[Pattern]
                      </rule>
                    </Call>
                  </arg>
                </Field>
              </elements>
            </Sequence>
          </alts>
        </Alt>
      </arg>
    </Rule>
    <Rule name='Path'>
      <grammar many='false' keyed='false'>
        /
      </grammar>
      <arg many='false' keyed='false'>
        <Alt>
          <alts many='true' keyed='false'>
            <Create name='Anchor'>
              <arg many='false' keyed='false'>
                <Sequence>
                  <elements many='true' keyed='false'>
                    <Field name='type'>
                      <arg many='false' keyed='false'>
                        <Lit value='.'/>
                      </arg>
                    </Field>
                  </elements>
                </Sequence>
              </arg>
            </Create>
            <Create name='Anchor'>
              <arg many='false' keyed='false'>
                <Sequence>
                  <elements many='true' keyed='false'>
                    <Field name='type'>
                      <arg many='false' keyed='false'>
                        <Lit value='..'/>
                      </arg>
                    </Field>
                  </elements>
                </Sequence>
              </arg>
            </Create>
            <Create name='Sub'>
              <arg many='false' keyed='false'>
                <Sequence>
                  <elements many='true' keyed='false'>
                    <Field name='parent'>
                      <arg many='false' keyed='false'>
                        <Regular optional='true'>
                          <arg many='false' keyed='false'>
                            <Call>
                              <rule many='false' keyed='true'>
                                /rules[Path]
                              </rule>
                            </Call>
                          </arg>
                        </Regular>
                      </arg>
                    </Field>
                    <Lit value='/'/>
                    <Field name='name'>
                      <arg many='false' keyed='false'>
                        <Value kind='sym'/>
                      </arg>
                    </Field>
                    <Regular optional='true'>
                      <arg many='false' keyed='false'>
                        <Call>
                          <rule many='false' keyed='true'>
                            /rules[Subscript]
                          </rule>
                        </Call>
                      </arg>
                    </Regular>
                  </elements>
                </Sequence>
              </arg>
            </Create>
          </alts>
        </Alt>
      </arg>
    </Rule>
    <Rule name='Key'>
      <grammar many='false' keyed='false'>
        /
      </grammar>
      <arg many='false' keyed='false'>
        <Alt>
          <alts many='true' keyed='false'>
            <Create name='Const'>
              <arg many='false' keyed='false'>
                <Sequence>
                  <elements many='true' keyed='false'>
                    <Field name='value'>
                      <arg many='false' keyed='false'>
                        <Value kind='atom'/>
                      </arg>
                    </Field>
                  </elements>
                </Sequence>
              </arg>
            </Create>
            <Sequence>
              <elements many='true' keyed='false'>
                <Call>
                  <rule many='false' keyed='true'>
                    /rules[Path]
                  </rule>
                </Call>
              </elements>
            </Sequence>
            <Create name='It'>
              <arg many='false' keyed='false'>
                <Sequence>
                  <elements many='true' keyed='false'>
                    <Lit value='it'/>
                  </elements>
                </Sequence>
              </arg>
            </Create>
          </alts>
        </Alt>
      </arg>
    </Rule>
    <Rule name='Expr'>
      <grammar many='false' keyed='false'>
        /
      </grammar>
      <arg many='false' keyed='false'>
        <Alt>
          <alts many='true' keyed='false'>
            <Sequence>
              <elements many='true' keyed='false'>
                <Call>
                  <rule many='false' keyed='true'>
                    /rules[ETernOp]
                  </rule>
                </Call>
              </elements>
            </Sequence>
          </alts>
        </Alt>
      </arg>
    </Rule>
  </rules>
</Grammar>