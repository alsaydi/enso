<expr.grammar source='core/expr/models/expr.grammar' date='2013-01-21 11:10:08 -0600' checksum='1a3b10fb6ed587bfd6e98bc61850f0e64afbf30b'>
  <depends/>
  <Grammar>
    <start many='false' keyed='true'>
      /rules[Expr]
    </start>
    <rules many='true' keyed='true'>
      <Rule name='Expr'>
        <grammar many='false' keyed='false'>
          /
        </grammar>
        <arg many='false' keyed='false'>
          <Alt>
            <alts many='true' keyed='false'>
              <Sequence>
                <elements many='true' keyed='false'>
                  <Call>
                    <rule many='false' keyed='true'>
                      /rules[ETernOp]
                    </rule>
                  </Call>
                </elements>
              </Sequence>
            </alts>
          </Alt>
        </arg>
      </Rule>
      <Rule name='ETernOp'>
        <grammar many='false' keyed='false'>
          /
        </grammar>
        <arg many='false' keyed='false'>
          <Alt>
            <alts many='true' keyed='false'>
              <Create name='ETernOp'>
                <arg many='false' keyed='false'>
                  <Sequence>
                    <elements many='true' keyed='false'>
                      <Field name='e1'>
                        <arg many='false' keyed='false'>
                          <Call>
                            <rule many='false' keyed='true'>
                              /rules[ETernOp]
                            </rule>
                          </Call>
                        </arg>
                      </Field>
                      <Field name='op1'>
                        <arg many='false' keyed='false'>
                          <Lit value='?'/>
                        </arg>
                      </Field>
                      <Field name='e2'>
                        <arg many='false' keyed='false'>
                          <Call>
                            <rule many='false' keyed='true'>
                              /rules[EOr]
                            </rule>
                          </Call>
                        </arg>
                      </Field>
                      <Field name='op2'>
                        <arg many='false' keyed='false'>
                          <Lit value=':'/>
                        </arg>
                      </Field>
                      <Field name='e3'>
                        <arg many='false' keyed='false'>
                          <Call>
                            <rule many='false' keyed='true'>
                              /rules[EOr]
                            </rule>
                          </Call>
                        </arg>
                      </Field>
                    </elements>
                  </Sequence>
                </arg>
              </Create>
              <Sequence>
                <elements many='true' keyed='false'>
                  <Call>
                    <rule many='false' keyed='true'>
                      /rules[EOr]
                    </rule>
                  </Call>
                </elements>
              </Sequence>
            </alts>
          </Alt>
        </arg>
      </Rule>
      <Rule name='EOr'>
        <grammar many='false' keyed='false'>
          /
        </grammar>
        <arg many='false' keyed='false'>
          <Alt>
            <alts many='true' keyed='false'>
              <Create name='EBinOp'>
                <arg many='false' keyed='false'>
                  <Sequence>
                    <elements many='true' keyed='false'>
                      <Field name='e1'>
                        <arg many='false' keyed='false'>
                          <Call>
                            <rule many='false' keyed='true'>
                              /rules[EOr]
                            </rule>
                          </Call>
                        </arg>
                      </Field>
                      <Lit value='or'/>
                      <Field name='e2'>
                        <arg many='false' keyed='false'>
                          <Call>
                            <rule many='false' keyed='true'>
                              /rules[EAnd]
                            </rule>
                          </Call>
                        </arg>
                      </Field>
                      <Code>
                        <expr many='false' keyed='false'>
                          <EBinOp op='eql?'>
                            <e1 many='false' keyed='false'>
                              <EVar name='op'/>
                            </e1>
                            <e2 many='false' keyed='false'>
                              <EStrConst val='|'/>
                            </e2>
                          </EBinOp>
                        </expr>
                      </Code>
                    </elements>
                  </Sequence>
                </arg>
              </Create>
              <Sequence>
                <elements many='true' keyed='false'>
                  <Call>
                    <rule many='false' keyed='true'>
                      /rules[EAnd]
                    </rule>
                  </Call>
                </elements>
              </Sequence>
            </alts>
          </Alt>
        </arg>
      </Rule>
      <Rule name='EAnd'>
        <grammar many='false' keyed='false'>
          /
        </grammar>
        <arg many='false' keyed='false'>
          <Alt>
            <alts many='true' keyed='false'>
              <Create name='EBinOp'>
                <arg many='false' keyed='false'>
                  <Sequence>
                    <elements many='true' keyed='false'>
                      <Field name='e1'>
                        <arg many='false' keyed='false'>
                          <Call>
                            <rule many='false' keyed='true'>
                              /rules[EAnd]
                            </rule>
                          </Call>
                        </arg>
                      </Field>
                      <Lit value='and'/>
                      <Field name='e2'>
                        <arg many='false' keyed='false'>
                          <Call>
                            <rule many='false' keyed='true'>
                              /rules[EBinOp1]
                            </rule>
                          </Call>
                        </arg>
                      </Field>
                      <Code>
                        <expr many='false' keyed='false'>
                          <EBinOp op='eql?'>
                            <e1 many='false' keyed='false'>
                              <EVar name='op'/>
                            </e1>
                            <e2 many='false' keyed='false'>
                              <EStrConst val='&amp;'/>
                            </e2>
                          </EBinOp>
                        </expr>
                      </Code>
                    </elements>
                  </Sequence>
                </arg>
              </Create>
              <Sequence>
                <elements many='true' keyed='false'>
                  <Call>
                    <rule many='false' keyed='true'>
                      /rules[EBinOp1]
                    </rule>
                  </Call>
                </elements>
              </Sequence>
            </alts>
          </Alt>
        </arg>
      </Rule>
      <Rule name='EBinOp1'>
        <grammar many='false' keyed='false'>
          /
        </grammar>
        <arg many='false' keyed='false'>
          <Alt>
            <alts many='true' keyed='false'>
              <Create name='EBinOp'>
                <arg many='false' keyed='false'>
                  <Sequence>
                    <elements many='true' keyed='false'>
                      <Field name='e1'>
                        <arg many='false' keyed='false'>
                          <Call>
                            <rule many='false' keyed='true'>
                              /rules[EBinOp1]
                            </rule>
                          </Call>
                        </arg>
                      </Field>
                      <Alt>
                        <alts many='true' keyed='false'>
                          <Sequence>
                            <elements many='true' keyed='false'>
                              <Lit value='=='/>
                              <Code>
                                <expr many='false' keyed='false'>
                                  <EBinOp op='eql?'>
                                    <e1 many='false' keyed='false'>
                                      <EVar name='op'/>
                                    </e1>
                                    <e2 many='false' keyed='false'>
                                      <EStrConst val='eql?'/>
                                    </e2>
                                  </EBinOp>
                                </expr>
                              </Code>
                            </elements>
                          </Sequence>
                          <Sequence>
                            <elements many='true' keyed='false'>
                              <Field name='op'>
                                <arg many='false' keyed='false'>
                                  <Lit value='!='/>
                                </arg>
                              </Field>
                            </elements>
                          </Sequence>
                          <Sequence>
                            <elements many='true' keyed='false'>
                              <Field name='op'>
                                <arg many='false' keyed='false'>
                                  <Lit value='&gt;'/>
                                </arg>
                              </Field>
                            </elements>
                          </Sequence>
                          <Sequence>
                            <elements many='true' keyed='false'>
                              <Field name='op'>
                                <arg many='false' keyed='false'>
                                  <Lit value='&lt;'/>
                                </arg>
                              </Field>
                            </elements>
                          </Sequence>
                          <Sequence>
                            <elements many='true' keyed='false'>
                              <Field name='op'>
                                <arg many='false' keyed='false'>
                                  <Lit value='&gt;='/>
                                </arg>
                              </Field>
                            </elements>
                          </Sequence>
                          <Sequence>
                            <elements many='true' keyed='false'>
                              <Field name='op'>
                                <arg many='false' keyed='false'>
                                  <Lit value='&lt;='/>
                                </arg>
                              </Field>
                            </elements>
                          </Sequence>
                        </alts>
                      </Alt>
                      <Field name='e2'>
                        <arg many='false' keyed='false'>
                          <Call>
                            <rule many='false' keyed='true'>
                              /rules[EBinOp2]
                            </rule>
                          </Call>
                        </arg>
                      </Field>
                    </elements>
                  </Sequence>
                </arg>
              </Create>
              <Sequence>
                <elements many='true' keyed='false'>
                  <Call>
                    <rule many='false' keyed='true'>
                      /rules[EBinOp2]
                    </rule>
                  </Call>
                </elements>
              </Sequence>
            </alts>
          </Alt>
        </arg>
      </Rule>
      <Rule name='EBinOp2'>
        <grammar many='false' keyed='false'>
          /
        </grammar>
        <arg many='false' keyed='false'>
          <Alt>
            <alts many='true' keyed='false'>
              <Create name='EBinOp'>
                <arg many='false' keyed='false'>
                  <Sequence>
                    <elements many='true' keyed='false'>
                      <Field name='e1'>
                        <arg many='false' keyed='false'>
                          <Call>
                            <rule many='false' keyed='true'>
                              /rules[EBinOp2]
                            </rule>
                          </Call>
                        </arg>
                      </Field>
                      <Alt>
                        <alts many='true' keyed='false'>
                          <Sequence>
                            <elements many='true' keyed='false'>
                              <Field name='op'>
                                <arg many='false' keyed='false'>
                                  <Lit value='+'/>
                                </arg>
                              </Field>
                            </elements>
                          </Sequence>
                          <Sequence>
                            <elements many='true' keyed='false'>
                              <Field name='op'>
                                <arg many='false' keyed='false'>
                                  <Lit value='-'/>
                                </arg>
                              </Field>
                            </elements>
                          </Sequence>
                        </alts>
                      </Alt>
                      <Field name='e2'>
                        <arg many='false' keyed='false'>
                          <Call>
                            <rule many='false' keyed='true'>
                              /rules[EBinOp3]
                            </rule>
                          </Call>
                        </arg>
                      </Field>
                    </elements>
                  </Sequence>
                </arg>
              </Create>
              <Sequence>
                <elements many='true' keyed='false'>
                  <Call>
                    <rule many='false' keyed='true'>
                      /rules[EBinOp3]
                    </rule>
                  </Call>
                </elements>
              </Sequence>
            </alts>
          </Alt>
        </arg>
      </Rule>
      <Rule name='EBinOp3'>
        <grammar many='false' keyed='false'>
          /
        </grammar>
        <arg many='false' keyed='false'>
          <Alt>
            <alts many='true' keyed='false'>
              <Create name='EBinOp'>
                <arg many='false' keyed='false'>
                  <Sequence>
                    <elements many='true' keyed='false'>
                      <Field name='e1'>
                        <arg many='false' keyed='false'>
                          <Call>
                            <rule many='false' keyed='true'>
                              /rules[EBinOp3]
                            </rule>
                          </Call>
                        </arg>
                      </Field>
                      <Alt>
                        <alts many='true' keyed='false'>
                          <Sequence>
                            <elements many='true' keyed='false'>
                              <Field name='op'>
                                <arg many='false' keyed='false'>
                                  <Lit value='*'/>
                                </arg>
                              </Field>
                            </elements>
                          </Sequence>
                          <Sequence>
                            <elements many='true' keyed='false'>
                              <Field name='op'>
                                <arg many='false' keyed='false'>
                                  <Lit value='/'/>
                                </arg>
                              </Field>
                            </elements>
                          </Sequence>
                          <Sequence>
                            <elements many='true' keyed='false'>
                              <Field name='op'>
                                <arg many='false' keyed='false'>
                                  <Lit value='%'/>
                                </arg>
                              </Field>
                            </elements>
                          </Sequence>
                        </alts>
                      </Alt>
                      <Field name='e2'>
                        <arg many='false' keyed='false'>
                          <Call>
                            <rule many='false' keyed='true'>
                              /rules[EUnOp]
                            </rule>
                          </Call>
                        </arg>
                      </Field>
                    </elements>
                  </Sequence>
                </arg>
              </Create>
              <Sequence>
                <elements many='true' keyed='false'>
                  <Call>
                    <rule many='false' keyed='true'>
                      /rules[EUnOp]
                    </rule>
                  </Call>
                </elements>
              </Sequence>
            </alts>
          </Alt>
        </arg>
      </Rule>
      <Rule name='EUnOp'>
        <grammar many='false' keyed='false'>
          /
        </grammar>
        <arg many='false' keyed='false'>
          <Alt>
            <alts many='true' keyed='false'>
              <Create name='EUnOp'>
                <arg many='false' keyed='false'>
                  <Sequence>
                    <elements many='true' keyed='false'>
                      <Lit value='not'/>
                      <Field name='e'>
                        <arg many='false' keyed='false'>
                          <Call>
                            <rule many='false' keyed='true'>
                              /rules[Expr]
                            </rule>
                          </Call>
                        </arg>
                      </Field>
                      <Code>
                        <expr many='false' keyed='false'>
                          <EBinOp op='eql?'>
                            <e1 many='false' keyed='false'>
                              <EVar name='op'/>
                            </e1>
                            <e2 many='false' keyed='false'>
                              <EStrConst val='!'/>
                            </e2>
                          </EBinOp>
                        </expr>
                      </Code>
                    </elements>
                  </Sequence>
                </arg>
              </Create>
              <Sequence>
                <elements many='true' keyed='false'>
                  <Call>
                    <rule many='false' keyed='true'>
                      /rules[EFunCall]
                    </rule>
                  </Call>
                </elements>
              </Sequence>
              <Sequence>
                <elements many='true' keyed='false'>
                  <Call>
                    <rule many='false' keyed='true'>
                      /rules[EListComp]
                    </rule>
                  </Call>
                </elements>
              </Sequence>
              <Sequence>
                <elements many='true' keyed='false'>
                  <Call>
                    <rule many='false' keyed='true'>
                      /rules[Primary]
                    </rule>
                  </Call>
                </elements>
              </Sequence>
            </alts>
          </Alt>
        </arg>
      </Rule>
      <Rule name='EFunCall'>
        <grammar many='false' keyed='false'>
          /
        </grammar>
        <arg many='false' keyed='false'>
          <Alt>
            <alts many='true' keyed='false'>
              <Create name='EFunCall'>
                <arg many='false' keyed='false'>
                  <Sequence>
                    <elements many='true' keyed='false'>
                      <Field name='fun'>
                        <arg many='false' keyed='false'>
                          <Call>
                            <rule many='false' keyed='true'>
                              /rules[EUnOp]
                            </rule>
                          </Call>
                        </arg>
                      </Field>
                      <Lit value='('/>
                      <Field name='params'>
                        <arg many='false' keyed='false'>
                          <Regular optional='true' many='true'>
                            <arg many='false' keyed='false'>
                              <Call>
                                <rule many='false' keyed='true'>
                                  /rules[Expr]
                                </rule>
                              </Call>
                            </arg>
                            <sep many='false' keyed='false'>
                              <Lit value=','/>
                            </sep>
                          </Regular>
                        </arg>
                      </Field>
                      <Lit value=')'/>
                    </elements>
                  </Sequence>
                </arg>
              </Create>
            </alts>
          </Alt>
        </arg>
      </Rule>
      <Rule name='Primary'>
        <grammar many='false' keyed='false'>
          /
        </grammar>
        <arg many='false' keyed='false'>
          <Alt>
            <alts many='true' keyed='false'>
              <Sequence>
                <elements many='true' keyed='false'>
                  <Call>
                    <rule many='false' keyed='true'>
                      /rules[EConst]
                    </rule>
                  </Call>
                </elements>
              </Sequence>
              <Create name='EField'>
                <arg many='false' keyed='false'>
                  <Sequence>
                    <elements many='true' keyed='false'>
                      <Field name='e'>
                        <arg many='false' keyed='false'>
                          <Call>
                            <rule many='false' keyed='true'>
                              /rules[Primary]
                            </rule>
                          </Call>
                        </arg>
                      </Field>
                      <NoSpace/>
                      <Lit value='.'/>
                      <NoSpace/>
                      <Field name='fname'>
                        <arg many='false' keyed='false'>
                          <Value kind='sym'/>
                        </arg>
                      </Field>
                    </elements>
                  </Sequence>
                </arg>
              </Create>
              <Create name='ESubscript'>
                <arg many='false' keyed='false'>
                  <Sequence>
                    <elements many='true' keyed='false'>
                      <Field name='e'>
                        <arg many='false' keyed='false'>
                          <Call>
                            <rule many='false' keyed='true'>
                              /rules[Expr]
                            </rule>
                          </Call>
                        </arg>
                      </Field>
                      <Lit value='['/>
                      <Field name='sub'>
                        <arg many='false' keyed='false'>
                          <Call>
                            <rule many='false' keyed='true'>
                              /rules[Expr]
                            </rule>
                          </Call>
                        </arg>
                      </Field>
                      <Lit value=']'/>
                    </elements>
                  </Sequence>
                </arg>
              </Create>
              <Create name='EVar'>
                <arg many='false' keyed='false'>
                  <Sequence>
                    <elements many='true' keyed='false'>
                      <Field name='name'>
                        <arg many='false' keyed='false'>
                          <Value kind='sym'/>
                        </arg>
                      </Field>
                    </elements>
                  </Sequence>
                </arg>
              </Create>
              <Create name='EList'>
                <arg many='false' keyed='false'>
                  <Sequence>
                    <elements many='true' keyed='false'>
                      <Lit value='['/>
                      <Field name='elems'>
                        <arg many='false' keyed='false'>
                          <Regular optional='true' many='true'>
                            <arg many='false' keyed='false'>
                              <Call>
                                <rule many='false' keyed='true'>
                                  /rules[Expr]
                                </rule>
                              </Call>
                            </arg>
                            <sep many='false' keyed='false'>
                              <Lit value=','/>
                            </sep>
                          </Regular>
                        </arg>
                      </Field>
                      <Lit value=']'/>
                    </elements>
                  </Sequence>
                </arg>
              </Create>
              <Sequence>
                <elements many='true' keyed='false'>
                  <Lit value='('/>
                  <Call>
                    <rule many='false' keyed='true'>
                      /rules[Expr]
                    </rule>
                  </Call>
                  <Lit value=')'/>
                </elements>
              </Sequence>
            </alts>
          </Alt>
        </arg>
      </Rule>
      <Rule name='EListComp'>
        <grammar many='false' keyed='false'>
          /
        </grammar>
        <arg many='false' keyed='false'>
          <Alt>
            <alts many='true' keyed='false'>
              <Create name='EListComp'>
                <arg many='false' keyed='false'>
                  <Sequence>
                    <elements many='true' keyed='false'>
                      <Alt>
                        <alts many='true' keyed='false'>
                          <Sequence>
                            <elements many='true' keyed='false'>
                              <Field name='op'>
                                <arg many='false' keyed='false'>
                                  <Lit value='all?'/>
                                </arg>
                              </Field>
                            </elements>
                          </Sequence>
                          <Sequence>
                            <elements many='true' keyed='false'>
                              <Field name='op'>
                                <arg many='false' keyed='false'>
                                  <Lit value='any?'/>
                                </arg>
                              </Field>
                            </elements>
                          </Sequence>
                        </alts>
                      </Alt>
                      <Field name='var'>
                        <arg many='false' keyed='false'>
                          <Value kind='sym'/>
                        </arg>
                      </Field>
                      <Lit value='in'/>
                      <Field name='list'>
                        <arg many='false' keyed='false'>
                          <Call>
                            <rule many='false' keyed='true'>
                              /rules[Expr]
                            </rule>
                          </Call>
                        </arg>
                      </Field>
                      <Lit value=':'/>
                      <Field name='e'>
                        <arg many='false' keyed='false'>
                          <Call>
                            <rule many='false' keyed='true'>
                              /rules[Expr]
                            </rule>
                          </Call>
                        </arg>
                      </Field>
                    </elements>
                  </Sequence>
                </arg>
              </Create>
            </alts>
          </Alt>
        </arg>
      </Rule>
      <Rule name='EConst'>
        <grammar many='false' keyed='false'>
          /
        </grammar>
        <arg many='false' keyed='false'>
          <Alt>
            <alts many='true' keyed='false'>
              <Create name='EStrConst'>
                <arg many='false' keyed='false'>
                  <Sequence>
                    <elements many='true' keyed='false'>
                      <Field name='val'>
                        <arg many='false' keyed='false'>
                          <Value kind='str'/>
                        </arg>
                      </Field>
                    </elements>
                  </Sequence>
                </arg>
              </Create>
              <Create name='EIntConst'>
                <arg many='false' keyed='false'>
                  <Sequence>
                    <elements many='true' keyed='false'>
                      <Field name='val'>
                        <arg many='false' keyed='false'>
                          <Value kind='int'/>
                        </arg>
                      </Field>
                    </elements>
                  </Sequence>
                </arg>
              </Create>
              <Create name='EBoolConst'>
                <arg many='false' keyed='false'>
                  <Sequence>
                    <elements many='true' keyed='false'>
                      <Lit value='true'/>
                      <Code>
                        <expr many='false' keyed='false'>
                          <EBinOp op='eql?'>
                            <e1 many='false' keyed='false'>
                              <EVar name='val'/>
                            </e1>
                            <e2 many='false' keyed='false'>
                              <EBoolConst val='true'/>
                            </e2>
                          </EBinOp>
                        </expr>
                      </Code>
                    </elements>
                  </Sequence>
                </arg>
              </Create>
              <Create name='EBoolConst'>
                <arg many='false' keyed='false'>
                  <Sequence>
                    <elements many='true' keyed='false'>
                      <Lit value='false'/>
                      <Code>
                        <expr many='false' keyed='false'>
                          <EBinOp op='eql?'>
                            <e1 many='false' keyed='false'>
                              <EVar name='val'/>
                            </e1>
                            <e2 many='false' keyed='false'>
                              <EBoolConst/>
                            </e2>
                          </EBinOp>
                        </expr>
                      </Code>
                    </elements>
                  </Sequence>
                </arg>
              </Create>
              <Create name='ERealConst'>
                <arg many='false' keyed='false'>
                  <Sequence>
                    <elements many='true' keyed='false'>
                      <Field name='val'>
                        <arg many='false' keyed='false'>
                          <Value kind='real'/>
                        </arg>
                      </Field>
                    </elements>
                  </Sequence>
                </arg>
              </Create>
              <Create name='ENil'>
                <arg many='false' keyed='false'>
                  <Sequence>
                    <elements many='true' keyed='false'>
                      <Lit value='nil'/>
                    </elements>
                  </Sequence>
                </arg>
              </Create>
            </alts>
          </Alt>
        </arg>
      </Rule>
    </rules>
  </Grammar>
</expr.grammar>