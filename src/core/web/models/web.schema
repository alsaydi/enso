
primitive \str
primitive \int
primitive \bool

class Web
  defs: Def*
end

class Def
  #name: str
  formals: Formal*
  body: Stat
end

class Stat
end

class Yield < Stat
end

class For < Stat
  var: str
  iter: Exp
  body: Stat
  index: str?
end

class If < Stat
  cond: Exp
  body: Stat
  else: Stat?
end

class Let < Stat
  decls:Assign* 
  body:Stat
end

class Call < Stat, Exp
  func: str
  args: Exp*
  named_args: Named*
  block: Stat?
end

class Named
  name: str
  exp: Exp
end

class Assign
  name: str
  exp: Exp
end

class Element < Stat
  tag: str
  attrs: Attr*
  body: Stat*
end

class Attr 
  name: str
  exp: Exp
end

class Block < Stat
  stats: Stat*
end


class Text < Stat
  value: str
end

class Output < Stat
  exp: Exp
end

class Formal 
  name: str
  patterns: Pattern*
end

class Pattern
  name: str
  args: Formal*
  many: bool
end

class Exp
end

class Link < Exp
  exp: Exp
end

class Str < Exp
  value: str
end

class Var < Exp
  name: str
end

class All < Exp
  klass: str
end

class Field < Exp
  exp: Exp
  name: str
end

class Address < Exp
  exp: Exp
end

class Concat < Exp
  lhs: Exp
  rhs: Exp
end

class GenSym < Exp
end