start Web

Web ::= [Web] toplevels:Toplevel*

Toplevel ::= [Def] "def" name:sym Sig? body:Stat
	  |  [Import] "import" module:sym

// TODO: we have a dangling else problem...

Stat ::= [For] "for" "(" var:sym ":" iter:Exp Index? ")" body:Stat
       | [If] "if" "(" cond:Exp ")" body:Stat ("else" else:Stat)?
       | [Call] exp:Primary Args? block:Block
       | Call ";"  // todo: should be exp if we have closures
       | [Element] "<" tag:sym attrs:Attr* "/>"
       | [Element] "<" tag:sym attrs:Attr*  ">" body:Stat* "</" sym ">"
       | Block
       | [Let] "let" decls:Assign* "in" body:Stat
       | [Output] "$" exp:Exp
       | [Text] value:str
       | [Switch] "switch" "(" exp:Exp ")" "{" Case*
       	 	  	   ("default" default:Stat)? "}"

Block ::= [Block] "{" stats:Stat* "}"

Call ::= [Call] exp:Primary Args

Case ::= [Case] "case" name:sym ":" body:Stat



Primary ::= [Field] exp:Primary "->" name:sym
      | [Subscript] obj:Primary "[" exp:Exp "]"
      | [Var] name:sym


Exp ::= Primary
      | [Str] value:str
      | [Int] value:int
      | Call  
      | [Link] "link" "(" exp:Exp ")"
      | [New] "new" "(" class:sym ")"
      | [Address] "address" "(" exp:Exp ")"
      | [GenSym] "gensym"
      | [Concat] lhs:Exp "+" rhs:Exp  // TODO: precedences
      | [Equal] lhs:Exp "==" rhs:Exp 
      | [In] lhs:Exp "in" rhs:Exp 
      | [List] "[" elements:{Exp ","}* "]"

      
Index ::= "," index:sym

Assign ::= [Assign] name:sym "=" exp:Exp

Attr ::=  [Attr] name:sym "=" exp:Exp

Args ::= "(" args:{Exp ","}* ")"

Sig ::=  "(" Formals  ")"

Formals ::= formals:{Formal ","}+ "," tail:Tail
         |  formals:{Formal ","}* 
         |  tail:Tail

Tail ::= [Tail] name:sym "[" Formals "]"

Formal ::= [Formal] name:sym (":" cons:Cons)?

Cons ::= [Cons] name:sym Sig

