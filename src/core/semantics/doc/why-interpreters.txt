* why interpreters
- define interpreter: what is NOT an interpreter?
- the argument for interpreters
  - one less indirection: better runtime analysis, etc
  - reuse library code from implementation language
  - more 'natural' (subjective)
  - partial evaluation (is this an advantage or the
    mitigation of a disadvantage?)
- disadvantages of interpreters (compared to?)
  - blackbox -- hard to analyze, generate tools, etc
  - reusability
  - difficult to design language from scratch (cf ??)

The case for interpreters
-------------------------