
class If
  @succ: Stm* = body, else
  @following: Stm* = 
end

class While
  @succ: Stm* = following, body
  @following: Stm* = self
end

class Return
  @succ: Stm* =
end

class Block
  @succ: Stm* = body[0]
  @following: Stm* = if parent.is_last then 
end

class Stm
  @succ: Stm* = following
end

ollowing : Stm ==> Set[Stm] =
    childAttr {
        case s => {
             case t @ While (_, _)           => Set (t)
             case b @ Block (_*) if s isLast => b->following
             case Block (_*)                 => Set (s.next)
             case _                          => Set ()
        }
    }