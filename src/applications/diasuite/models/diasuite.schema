
primitive \str

class Document
! defs: Def*


class Def
# name: str


class Device < Def
  super: str?
! elements: Def*


class Context < Def
! type: Type
! indices: Variable*
! elements: Def*


class Controller < Def
! elements: Ref*


class ActionImpl < Def


class Action < Def
! actions: ActionDecl+


class ActionDecl
# name: str
! variables: Variable*


class Struct < Def
! variables: Variable*


class Enum < Def
  values: str*


class Source < Def
! type: Type
! indices: Variable*


class Variable < Def
! type: Type


class Ref


class SourceRef < Ref
  name: str
  device: Device


class ContextRef < Ref
  context: Context


class ActionRef < Ref
  action: Action
  device: Device


class Type


class Primitive < Type
  kind: str


class Class < Type
  name: str


class Array < Type
! type: Type


